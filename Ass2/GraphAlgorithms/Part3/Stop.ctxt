#BlueJ class context
comment0.target=Stop
comment0.text=\r\n\ Structure\ for\ holding\ stop\ information\r\n\ Needs\ to\ be\ Comparable\ in\ order\ to\ be\ able\ to\ order\ them\ for\ input\ in\ the\ interface\r\n
comment1.params=lon\ lat\ name\ id
comment1.target=Stop(double,\ double,\ java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Constructor\ for\ a\ stop\r\n\ \r\n\ @param\ lon\ Longitude\ of\ the\ stop\r\n\ @param\ lat\ Latitude\ of\ the\ stop\r\n\ @param\ name\ Long\ name\ for\ the\ stop\r\n\ @param\ id\ 4\ or\ 5\ digit\ stop\ id\r\n
comment10.params=line
comment10.target=void\ addLine(Line)
comment10.text=\r\n\ adding\ a\ line\ that\ goes\ through\ this\ stop\r\n\ @param\ line\r\n
comment11.params=
comment11.target=java.util.Collection\ getLines()
comment11.text=\r\n\ Return\ the\ lines\ that\ this\ stop\ is\ on\ \r\n
comment12.params=
comment12.target=java.util.Collection\ getNeighbors()
comment12.text=Get\ the\ collection\ of\ neigbor
comment13.params=neighbor
comment13.target=void\ addNeighbor(Stop)
comment13.text=add\ a\ new\ neighbor
comment14.params=neighbor
comment14.target=void\ removeNeighbor(Stop)
comment15.params=
comment15.target=void\ clearNeighbors()
comment2.params=
comment2.target=GisPoint\ getPoint()
comment2.text=\r\n\ Get\ the\ location\ of\ the\ stop\r\n\ @return\ GisPoint\ object\ of\ location\ on\ earth\r\n
comment3.params=
comment3.target=java.lang.String\ getName()
comment3.text=\r\n\ Get\ the\ name\ of\ the\ stop\r\n\ @return\ Name\ of\ the\ stop\r\n
comment4.params=
comment4.target=java.lang.String\ getId()
comment4.text=\r\n\ Get\ the\ ID\ of\ the\ stop\r\n\ @return\ ID\ of\ the\ stop\r\n
comment5.params=loc
comment5.target=double\ distanceTo(GisPoint)
comment5.text=\r\n\ Returns\ distance\ in\ meters\ between\ this\ stop\ and\ a\ GisPoint\r\n\ @param\ loc\ GisPoint\ to\ calculate\ distance\ to\r\n\ @return\ Distance\ in\ meters\r\n
comment6.params=toStop
comment6.target=double\ distanceTo(Stop)
comment6.text=\r\n\ Returns\ distance\ in\ meters\ between\ this\ stop\ and\ another\ stop\r\n\ @param\ toStop\ Stop\ to\ calculate\ distance\ to\r\n\ @return\ Distance\ in\ meters\r\n
comment7.params=other
comment7.target=int\ compareTo(Stop)
comment7.text=\r\n\ Compare\ by\ alphabetic\ order\ of\ name,\r\n\ If\ two\ stops\ have\ the\ same\ name,\ then\r\n\ compare\ their\ id's\ in\ case\ they\ are\ not\ the\ same\ stop.\r\n\ @param\ other\ Stop\ to\ compare\ to\r\n\ @return\ Comparison\ result\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\ \r\n\ Display\ a\ stop\r\n\ @return\ string\ of\ the\ stop\ information\ in\ the\ format\:\ XXXX\:\ long\ name\ at\ (lon,lat)\r\n
comment9.params=point
comment9.target=boolean\ atLocation(GisPoint)
comment9.text=\r\n\ @param\ point\ GisPoint\ to\ check\ if\ the\ stop\ is\ in\ an\ **identical**\ location\r\n\ @return\ is\ this\ stop\ in\ the\ same\ location\ as\ the\ given\ point\r\n
numComments=16
