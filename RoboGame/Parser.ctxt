#BlueJ class context
comment0.target=Parser
comment0.text=\r\n\ See\ assignment\ handout\ for\ the\ grammar.\r\n\ You\ need\ to\ implement\ the\ parse(..)\ method\ and\ all\ the\ rest\ of\ the\ parser.\r\n\ There\ are\ several\ methods\ provided\ for\ you\:\r\n\ -\ several\ utility\ methods\ to\ help\ with\ the\ parsing\r\n\ See\ also\ the\ TestParser\ class\ for\ testing\ your\ code.\r\n
comment1.params=s
comment1.target=ProgramNode\ parse(java.util.Scanner)
comment1.text=\r\n\ The\ top\ of\ the\ parser,\ which\ is\ handed\ a\ scanner\ containing\r\n\ the\ text\ of\ the\ program\ to\ parse.\r\n\ Returns\ the\ parse\ tree.\r\n
comment10.params=p\ message\ s
comment10.target=java.lang.String\ require(java.util.regex.Pattern,\ java.lang.String,\ java.util.Scanner)
comment11.params=p\ message\ s
comment11.target=int\ requireInt(java.lang.String,\ java.lang.String,\ java.util.Scanner)
comment11.text=\r\n\ Requires\ that\ the\ next\ token\ matches\ a\ pattern\ (which\ should\ only\ match\ a\r\n\ number)\ if\ it\ matches,\ it\ consumes\ and\ returns\ the\ token\ as\ an\ integer\r\n\ if\ not,\ it\ throws\ an\ exception\ with\ an\ error\ message\r\n
comment12.params=p\ message\ s
comment12.target=int\ requireInt(java.util.regex.Pattern,\ java.lang.String,\ java.util.Scanner)
comment13.params=p\ s
comment13.target=boolean\ checkFor(java.lang.String,\ java.util.Scanner)
comment13.text=\r\n\ Checks\ whether\ the\ next\ token\ in\ the\ scanner\ matches\ the\ specified\r\n\ pattern,\ if\ so,\ consumes\ the\ token\ and\ return\ true.\ Otherwise\ returns\r\n\ false\ without\ consuming\ anything.\r\n
comment14.params=p\ s
comment14.target=boolean\ checkFor(java.util.regex.Pattern,\ java.util.Scanner)
comment2.params=s
comment2.target=ProgramNode\ parseAct(java.util.Scanner)
comment3.params=s
comment3.target=ProgramNode\ parseMove(java.util.Scanner)
comment3.text=move
comment4.params=s
comment4.target=ProgramNode\ parseTurnL(java.util.Scanner)
comment4.text=turnL
comment5.params=s
comment5.target=ProgramNode\ parseTurnR(java.util.Scanner)
comment5.text=turnR
comment6.params=s
comment6.target=ProgramNode\ parseTakeFuel(java.util.Scanner)
comment6.text=takefuel
comment7.params=s
comment7.target=ProgramNode\ parseWait(java.util.Scanner)
comment7.text=idlewait
comment8.params=message\ s
comment8.target=void\ fail(java.lang.String,\ java.util.Scanner)
comment8.text=\r\n\ Report\ a\ failure\ in\ the\ parser.\r\n
comment9.params=p\ message\ s
comment9.target=java.lang.String\ require(java.lang.String,\ java.lang.String,\ java.util.Scanner)
comment9.text=\r\n\ Requires\ that\ the\ next\ token\ matches\ a\ pattern\ if\ it\ matches,\ it\ consumes\r\n\ and\ returns\ the\ token,\ if\ not,\ it\ throws\ an\ exception\ with\ an\ error\r\n\ message\r\n
numComments=15
